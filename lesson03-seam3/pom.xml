<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>cz.muni.fi.pv243.lesson03</groupId>
   <artifactId>lesson03</artifactId>
   <version>0.0.1-SNAPSHOT</version>
   <packaging>war</packaging>
   <name>PV243 Lesson 03</name>
   <description>PV243 Lesson 03 - Seam3</description>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <javaee6.web.spec.version>2.0.0.Final</javaee6.web.spec.version>
      <jbossas.version>7.1.1.Final</jbossas.version>
      <seam.version>3.1.0.Final</seam.version>
   </properties>

   <dependencyManagement>
      <dependencies>
         <!-- JBoss distributes a complete set of Java EE 6 APIs including 
            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or 
            a collection) of artifacts. We use this here so that we always get the correct 
            versions of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can 
            read this as the JBoss stack of the Java EE Web Profile 6 APIs) -->
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-web-6.0</artifactId>
            <version>${javaee6.web.spec.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.seam</groupId>
            <artifactId>seam-bom</artifactId>
            <version>${seam.version}</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
        
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <!-- First declare the APIs we depend on and need for compilation. 
         All of them are provided by JBoss AS 7 -->
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>
      
      <dependency>
         <groupId>org.jboss.spec.javax.faces</groupId>
         <artifactId>jboss-jsf-api_2.0_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.annotation</groupId>
         <artifactId>jboss-annotations-api_1.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.ws.rs</groupId>
         <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.0-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.ejb</groupId>
         <artifactId>jboss-ejb-api_3.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-validator</artifactId>
         <version>4.2.0.Final</version>
         <scope>provided</scope>
         <exclusions>
            <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <dependency>
         <groupId>org.jboss.solder</groupId>
         <artifactId>solder-impl</artifactId>
      </dependency> 
 
      <dependency>
         <groupId>org.jboss.solder</groupId>
         <artifactId>solder-tooling</artifactId>
         <scope>provided</scope>
      </dependency> 
       
      <dependency>
      	 <groupId>org.jboss.seam.faces</groupId>
      	 <artifactId>seam-faces</artifactId>
      </dependency>
      
      <dependency>
      	 <groupId>org.jboss.seam.international</groupId>
      	 <artifactId>seam-international</artifactId>
      </dependency>     
            
      <dependency>
      	<groupId>org.jboss.seam.persistence</groupId>
      	<artifactId>seam-persistence</artifactId>
      </dependency>
      
      <dependency>
        <groupId>org.jboss.seam.security</groupId>
        <artifactId>seam-security</artifactId>
        <scope>compile</scope>
      </dependency>
      
      <dependency>
         <groupId>com.ocpsoft</groupId>
         <artifactId>prettyfaces-jsf2</artifactId>
      </dependency>

   </dependencies>

     <repositories>
        <!-- The JBoss Community public repository is a composite repository 
           of several major repositories -->
        <!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
        <repository>
           <id>jboss-public-repository</id>
           <name>JBoss Repository</name>
           <url>http://repository.jboss.org/nexus/content/groups/public</url>
           <!-- These optional flags are designed to speed up your builds 
              by reducing remote server calls -->
           <releases>
           </releases>
           <snapshots>
              <enabled>false</enabled>
           </snapshots>
        </repository>
     </repositories>

     <pluginRepositories>
        <pluginRepository>
           <id>jboss-public-repository</id>
           <name>JBoss Repository</name>
           <url>http://repository.jboss.org/nexus/content/groups/public</url>
           <releases>
           </releases>
           <snapshots>
              <enabled>false</enabled>
           </snapshots>
        </pluginRepository>
     </pluginRepositories>


   <build>
      <!-- Maven will append the version to the finalName (which is the name 
         given to the generated war, and hence the context root) -->
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
            annotation processors -->
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.1</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.1.1</version>
            <configuration>
               <!-- Java EE 6 doesn't require web.xml, Maven needs to catch 
                  up! -->
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
         <!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
         <!-- To use, set the JBOSS_HOME environment variable and run: mvn 
            package jboss-as:deploy -->
         <plugin>
            <groupId>org.jboss.as.plugins</groupId>
            <artifactId>jboss-as-maven-plugin</artifactId>
            <version>${jbossas.version}</version>
         </plugin>
      </plugins>
   </build>

   <profiles>

      <profile>
         <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
         <!-- Use this profile for any OpenShift specific customization your app will need. -->
         <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
         <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
         <id>openshift</id>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-war-plugin</artifactId>
                  <version>2.1.1</version>
                  <configuration>
                     <outputDirectory>deployments</outputDirectory>
                     <warName>ROOT</warName>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

   </profiles>
</project>
